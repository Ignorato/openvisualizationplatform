// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace OpenVP.GtkGui {
    
    
    public partial class MainWindow {
        
        private Gtk.UIManager UIManager;
        
        private Gtk.Action Preset;
        
        private Gtk.Action @new;
        
        private Gtk.Action open;
        
        private Gtk.Action save;
        
        private Gtk.Action saveAs;
        
        private Gtk.Action quit;
        
        private Gtk.Action LinearPreset;
        
        private Gtk.Action Options;
        
        private Gtk.ToggleAction WaitForDataSliceToDraw;
        
        private Gtk.ToggleAction AllowSlicesToBeSkipped;
        
        private Gtk.VBox vbox1;
        
        private Gtk.MenuBar menubar1;
        
        private Gtk.Alignment PresetPane;
        
        private Gtk.Statusbar StatusBar;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget OpenVP.GtkGui.MainWindow
            this.UIManager = new Gtk.UIManager();
            Gtk.ActionGroup w1 = new Gtk.ActionGroup("Default");
            this.Preset = new Gtk.Action("Preset", Mono.Unix.Catalog.GetString("_Preset"), null, null);
            this.Preset.ShortLabel = Mono.Unix.Catalog.GetString("_Preset");
            w1.Add(this.Preset, null);
            this.@new = new Gtk.Action("new", Mono.Unix.Catalog.GetString("_New"), null, "gtk-new");
            this.@new.ShortLabel = Mono.Unix.Catalog.GetString("_New");
            w1.Add(this.@new, null);
            this.open = new Gtk.Action("open", Mono.Unix.Catalog.GetString("_Open"), null, "gtk-open");
            this.open.ShortLabel = Mono.Unix.Catalog.GetString("_Open");
            w1.Add(this.open, null);
            this.save = new Gtk.Action("save", Mono.Unix.Catalog.GetString("_Save"), null, "gtk-save");
            this.save.Sensitive = false;
            this.save.ShortLabel = Mono.Unix.Catalog.GetString("_Save");
            w1.Add(this.save, null);
            this.saveAs = new Gtk.Action("saveAs", Mono.Unix.Catalog.GetString("Save _As"), null, "gtk-save-as");
            this.saveAs.Sensitive = false;
            this.saveAs.ShortLabel = Mono.Unix.Catalog.GetString("Save _As");
            w1.Add(this.saveAs, null);
            this.quit = new Gtk.Action("quit", Mono.Unix.Catalog.GetString("_Quit"), null, "gtk-quit");
            this.quit.ShortLabel = Mono.Unix.Catalog.GetString("_Quit");
            w1.Add(this.quit, null);
            this.LinearPreset = new Gtk.Action("LinearPreset", Mono.Unix.Catalog.GetString("_Linear preset"), null, null);
            this.LinearPreset.ShortLabel = Mono.Unix.Catalog.GetString("_Linear preset");
            w1.Add(this.LinearPreset, null);
            this.Options = new Gtk.Action("Options", Mono.Unix.Catalog.GetString("_Options"), null, null);
            this.Options.ShortLabel = Mono.Unix.Catalog.GetString("_Options");
            w1.Add(this.Options, null);
            this.WaitForDataSliceToDraw = new Gtk.ToggleAction("WaitForDataSliceToDraw", Mono.Unix.Catalog.GetString("_Wait for data slice to draw"), null, null);
            this.WaitForDataSliceToDraw.Active = true;
            this.WaitForDataSliceToDraw.ShortLabel = Mono.Unix.Catalog.GetString("_Wait for data slice to draw");
            w1.Add(this.WaitForDataSliceToDraw, null);
            this.AllowSlicesToBeSkipped = new Gtk.ToggleAction("AllowSlicesToBeSkipped", Mono.Unix.Catalog.GetString("_Allow slices to be skipped"), null, null);
            this.AllowSlicesToBeSkipped.ShortLabel = Mono.Unix.Catalog.GetString("_Allow slices to be skipped");
            w1.Add(this.AllowSlicesToBeSkipped, null);
            this.UIManager.InsertActionGroup(w1, 0);
            this.AddAccelGroup(this.UIManager.AccelGroup);
            this.Name = "OpenVP.GtkGui.MainWindow";
            this.Title = Mono.Unix.Catalog.GetString("Open Visualization Platform");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            // Container child OpenVP.GtkGui.MainWindow.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            // Container child vbox1.Gtk.Box+BoxChild
            this.UIManager.AddUiFromString("<ui><menubar name='menubar1'><menu name='Preset' action='Preset'><menu name='new' action='new'><menuitem name='LinearPreset' action='LinearPreset'/></menu><menuitem name='open' action='open'/><menuitem name='save' action='save'/><menuitem name='saveAs' action='saveAs'/><separator/><menuitem name='quit' action='quit'/></menu><menu name='Options' action='Options'><menuitem name='WaitForDataSliceToDraw' action='WaitForDataSliceToDraw'/><menuitem name='AllowSlicesToBeSkipped' action='AllowSlicesToBeSkipped'/></menu></menubar></ui>");
            this.menubar1 = ((Gtk.MenuBar)(this.UIManager.GetWidget("/menubar1")));
            this.menubar1.Name = "menubar1";
            this.vbox1.Add(this.menubar1);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.menubar1]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.PresetPane = new Gtk.Alignment(0.5F, 0.5F, 1F, 1F);
            this.PresetPane.Name = "PresetPane";
            this.vbox1.Add(this.PresetPane);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.PresetPane]));
            w3.Position = 1;
            // Container child vbox1.Gtk.Box+BoxChild
            this.StatusBar = new Gtk.Statusbar();
            this.StatusBar.Name = "StatusBar";
            this.StatusBar.Spacing = 6;
            this.vbox1.Add(this.StatusBar);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.vbox1[this.StatusBar]));
            w4.Position = 2;
            w4.Expand = false;
            w4.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 530;
            this.DefaultHeight = 395;
            this.Show();
            this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
            this.open.Activated += new System.EventHandler(this.OnOpenActivated);
            this.save.Activated += new System.EventHandler(this.OnSaveActivated);
            this.saveAs.Activated += new System.EventHandler(this.OnSaveAsActivated);
            this.quit.Activated += new System.EventHandler(this.OnQuitActivated);
            this.LinearPreset.Activated += new System.EventHandler(this.OnLinearPresetActivated);
            this.WaitForDataSliceToDraw.Toggled += new System.EventHandler(this.OnWaitForDataSliceToDrawToggled);
            this.AllowSlicesToBeSkipped.Toggled += new System.EventHandler(this.OnAllowSlicesToBeSkippedToggled);
        }
    }
}
